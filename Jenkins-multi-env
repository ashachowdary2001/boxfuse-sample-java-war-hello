pipeline {
    agent any

    stages {
        stage("GIT checkout") {
            steps {
                // This step is handled automatically by the Multibranch Pipeline configuration.
                // No need to specify the Git repository here.
            }
        }

        stage("Build") {
            steps {
                sh "mvn clean package"
            }
        }

        stage("Deploy to Dev") {
            when {
                expression { env.BRANCH_NAME == 'fe/dev' }
            }
            steps {
                script {
                    deployToTomcat('Dev', '3.110.77.94')
                }
            }
        }

        stage("Deploy to QA") {
            when {
                expression { env.BRANCH_NAME == 'fe/qa' }
            }
            steps {
                script {
                    deployToTomcat('QA', '65.0.86.219')
                }
            }
        }

        stage("Deploy to Production") {
            when {
                expression { env.BRANCH_NAME == 'main' }
            }
            steps {
                input "Deploy to Production?"
                script {
                    deployToTomcat('Production', '13.201.90.50')
                }
            }
        }
    }

    post {
        success {
            echo 'Deployment successful!'
        }
        failure {
            echo 'Deployment failed. Check logs and server settings.'
        }
    }
}

def deployToTomcat(environment, tomcatIP) {
    def remoteDir = "/home/ubuntu/apache-tomcat-9.0.84/webapps/"
    def remoteTempDir = "/tmp/"
    def remoteShutdownScript = "/home/ubuntu/apache-tomcat-9.0.84/bin/shutdown.sh"
    def remoteStartupScript = "/home/ubuntu/apache-tomcat-9.0.84/bin/startup.sh"
    def localWarFile = "target/boxfuse-sample-java-war-hello.war"

    // Authenticate using the SSH key named 'NewTomcat'
    sshagent(['NewTomcat']) {
        // Copy the WAR file to a temporary directory on the remote server
        sh "scp -o StrictHostKeyChecking=no ${localWarFile} ubuntu@${tomcatIP}:${remoteTempDir}"

        // Move the WAR file from the temporary directory to the final directory using sudo
        sh "ssh ubuntu@${tomcatIP} 'sudo mv ${remoteTempDir}boxfuse-sample-java-war-hello.war ${remoteDir}'"

        // Shutdown and then startup Tomcat on the remote server
        sh "ssh ubuntu@${tomcatIP} 'sudo ${remoteShutdownScript}'"
        sh "ssh ubuntu@${tomcatIP} 'sudo ${remoteStartupScript}'"

        echo "Deployment to ${environment}-Tomcat completed."
    }
}
